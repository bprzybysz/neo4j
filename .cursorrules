{
    "preferences": {
        "development": {
            "requireTests": true,
            "useTypeHints": true,
            "enforceDocumentation": {
                "newCode": true,
                "existingCode": false
            },
            "skipRefactoring": true,
            "allowLegacyPatterns": true,
            "pythonVersion": "3.11",
            "codingStyle": {
                "useClasses": true,
                "formatting": {
                    "indentSize": 4,
                    "lineLength": 88,
                    "useSpaces": true
                }
            }
        },
        "contextManagement": {
            "indexEntireCodebase": false,
            "useFileReferences": true
        },
        "codeQuality": {
            "criticalViolationsOnly": true,
            "newCodeStandards": "strict",
            "existingCodeStandards": "relaxed",
            "linters": {
                "python": {
                    "plugin": "ms-python.python",
                    "enabled": true,
                    "config": {
                        "python.linting.enabled": true,
                        "python.linting.pylintEnabled": true,
                        "python.linting.flake8Enabled": true,
                        "python.linting.mypyEnabled": true,
                        "python.formatting.provider": "black"
                    }
                }
            }
        },
        "models": {
            "simple": "gpt-4o-mini",
            "default": "claude-3.5-sonnet",
            "complex": "deepseek-r1",
            "backup": "gpt-4o",
            "autoModel": {
                "enabled": true,
                "allowedModels": [
                    "claude-3.5-sonnet",
                    "claude-3.7-sonnet",
                    "claude-3.7-sonnet-max",
                    "deepseek-r1",
                    "deepseek-v3",
                    "gemini-2.0-flash",
                    "gemini-2.0-flash-thinking-exp",
                    "gpt-4o",
                    "gpt-4o-mini",
                    "o1",
                    "o3-mini"
                ],
                "disallowedModels": [
                    "cursor-small",
                    "cursor-fast"
                ]
            }
        },
        "performance": {
            "useAgentMode": true,
            "maxToolCalls": 25,
            "contextPulling": true
        },
        "autoRun": true,
        "notifyOnSuccess": false,
        "notifyOnFailure": true,
        "venvPath": ".venv",
        "testing": {
            "framework": "pytest",
            "requireUnitTests": true,
            "requireIntegrationTests": true,
            "coverage": {
                "tool": "coverage",
                "minThreshold": 80
            }
        }
    },
    "rules": [
        {
            "name": "PythonLint",
            "trigger": "onCodeGeneration",
            "actions": [
                {
                    "type": "lint",
                    "command": ".venv/bin/python -m flake8",
                    "onSuccess": "RunTests",
                    "onFailure": "HandleLintErrors"
                }
            ]
        },
        {
            "name": "RunTests",
            "trigger": "onLintSuccess",
            "actions": [
                {
                    "type": "test",
                    "command": ".venv/bin/python -m pytest",
                    "onSuccess": "TypeCheck",
                    "onFailure": "HandleTestFailures"
                }
            ]
        },
        {
            "name": "TypeCheck",
            "trigger": "onTestSuccess",
            "actions": [
                {
                    "type": "analyze",
                    "command": ".venv/bin/python -m mypy .",
                    "onSuccess": "AutoReview",
                    "onFailure": "HandleTypeErrors"
                }
            ]
        },
        {
            "name": "HandleLintErrors",
            "trigger": "onLintFailure",
            "actions": [
                {
                    "type": "notify",
                    "message": "Linting failed. Attempting to fix..."
                },
                {
                    "type": "fixErrors",
                    "strategy": "autoFix",
                    "onSuccess": "RunTests",
                    "onFailure": "NotifyUser"
                }
            ]
        },
        {
            "name": "HandleTestFailures",
            "trigger": "onTestFailure",
            "actions": [
                {
                    "type": "notify",
                    "message": "Tests failed. Please review the test results."
                }
            ]
        },
        {
            "name": "HandleTypeErrors",
            "trigger": "onAnalysisFailure",
            "actions": [
                {
                    "type": "notify",
                    "message": "Type checking found issues. Please review."
                }
            ]
        },
        {
            "name": "AutoReview",
            "trigger": "onAnalysisSuccess",
            "actions": [
                {
                    "type": "codeReview",
                    "model": "deepseek-r1",
                    "onSuccess": "PresentForAcceptance",
                    "onFailure": "NotifyUser"
                }
            ]
        },
        {
            "name": "PresentForAcceptance",
            "trigger": "onReviewSuccess",
            "actions": [
                {
                    "type": "present",
                    "message": "Code is error-free and has passed all checks. Please accept the changes."
                }
            ]
        },
        {
            "name": "NotifyUser",
            "trigger": "onFailure",
            "actions": [
                {
                    "type": "notify",
                    "message": "An issue occurred during the automated process. Please check manually."
                }
            ]
        }
    ],
    "cursorTools": {
        "commands": {
            "web": {
                "description": "Get answers from the web using Perplexity AI",
                "usage": "cursor-tools web \"<your question>\"",
                "example": "cursor-tools web \"latest weather in London\"",
                "note": "For complex queries, write output to local-research/<query summary>.md"
            },
            "repo": {
                "description": "Get context-aware answers about this repository using Google Gemini",
                "usage": "cursor-tools repo \"<your question>\"",
                "example": "cursor-tools repo \"explain authentication flow\""
            },
            "doc": {
                "description": "Generate comprehensive documentation for this repository",
                "usage": "cursor-tools doc [options]",
                "example": "cursor-tools doc --output docs.md",
                "note": "For remote repos, write output to local-docs/<repo-name>.md"
            },
            "github": {
                "pr": {
                    "description": "Get PRs",
                    "usage": "cursor-tools github pr [number]",
                    "example": "cursor-tools github pr 123"
                },
                "issue": {
                    "description": "Get issues",
                    "usage": "cursor-tools github issue [number]",
                    "example": "cursor-tools github issue 456"
                }
            },
            "browser": {
                "open": {
                    "description": "Open a URL and capture page content",
                    "usage": "cursor-tools browser open <url> [options]",
                    "example": "cursor-tools browser open \"https://example.com\" --html"
                },
                "act": {
                    "description": "Execute actions on a webpage",
                    "usage": "cursor-tools browser act \"<instruction>\" --url=<url> [options]",
                    "example": "cursor-tools browser act \"Click Login\" --url=https://example.com"
                },
                "observe": {
                    "description": "Observe interactive elements on a webpage",
                    "usage": "cursor-tools browser observe \"<instruction>\" --url=<url> [options]",
                    "example": "cursor-tools browser observe \"interactive elements\" --url=https://example.com"
                },
                "extract": {
                    "description": "Extract data from a webpage",
                    "usage": "cursor-tools browser extract \"<instruction>\" --url=<url> [options]",
                    "example": "cursor-tools browser extract \"product names\" --url=https://example.com/products"
                }
            }
        },
        "options": {
            "general": {
                "model": "Specify alternative AI model",
                "maxTokens": "Control response length",
                "saveTo": "Save command output to file"
            },
            "documentation": {
                "fromGithub": "Generate docs for remote GitHub repository"
            },
            "browser": {
                "console": "Capture browser console logs",
                "html": "Capture page HTML content",
                "network": "Capture network activity",
                "screenshot": "Save page screenshot",
                "timeout": "Set navigation timeout",
                "viewport": "Set viewport size",
                "headless": "Run browser in headless mode",
                "connectTo": "Connect to existing Chrome instance",
                "wait": "Wait after page load",
                "video": "Save video recording"
            }
        },
        "help": {
            "webSearch": {
                "description": "Get answers from the web using Perplexity AI",
                "usage": "cursor-tools web \"<your question>\"",
                "example": "cursor-tools web \"latest weather in London\"",
                "note": "For complex queries, write output to local-research/<query summary>.md"
            },
            "repoContext": {
                "description": "Get context-aware answers about this repository using Google Gemini",
                "usage": "cursor-tools repo \"<your question>\"",
                "example": "cursor-tools repo \"explain authentication flow\""
            },
            "docGeneration": {
                "description": "Generate comprehensive documentation for this repository",
                "usage": "cursor-tools doc [options]",
                "example": "cursor-tools doc --output docs.md",
                "note": "For remote repos, write output to local-docs/<repo-name>.md"
            },
            "githubInfo": {
                "pr": {
                    "description": "Get PRs",
                    "usage": "cursor-tools github pr [number]",
                    "example": "cursor-tools github pr 123"
                },
                "issue": {
                    "description": "Get issues",
                    "usage": "cursor-tools github issue [number]",
                    "example": "cursor-tools github issue 456"
                }
            },
            "browserAutomation": {
                "notes": [
                    "All browser commands are stateless",
                    "Multi-step workflows supported",
                    "Video recording available",
                    "Wait command disabled"
                ],
                "commands": {
                    "open": {
                        "description": "Open URL and capture content",
                        "usage": "cursor-tools browser open <url> [options]"
                    },
                    "act": {
                        "description": "Execute webpage actions",
                        "usage": "cursor-tools browser act \"<instruction>\" --url=<url>"
                    },
                    "observe": {
                        "description": "Observe webpage elements",
                        "usage": "cursor-tools browser observe \"<instruction>\" --url=<url>"
                    },
                    "extract": {
                        "description": "Extract webpage data",
                        "usage": "cursor-tools browser extract \"<instruction>\" --url=<url>"
                    }
                }
            },
            "toolRecommendations": {
                "web": "Best for general web information",
                "repo": "Ideal for repository-specific questions",
                "doc": "Generates repository documentation",
                "browser": "Useful for web app testing"
            },
            "runningCommands": {
                "installed": "Use cursor-tools <command> or package manager commands",
                "uninstalled": "Use npx/bunx with cursor-tools@latest"
            },
            "installation": {
                "config": "cursor-tools.config.json location",
                "apiKeys": ".cursor-tools.env location",
                "requirements": "Playwright required for browser commands"
            }
        }
    }
}